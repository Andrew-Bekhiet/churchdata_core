// Mocks generated by Mockito 5.1.0 from annotations
// in churchdata_core/test/widgets/data_object_list_view_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:churchdata_core/churchdata_core.dart' as _i3;
import 'package:firebase_dynamic_links/firebase_dynamic_links.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeIOSParameters_0 extends _i1.Fake implements _i2.IOSParameters {}

class _FakeAndroidParameters_1 extends _i1.Fake
    implements _i2.AndroidParameters {}

class _FakeUri_2 extends _i1.Fake implements Uri {}

/// A class which mocks [ShareService].
///
/// See the documentation for Mockito's code generation for more information.
class MockShareService extends _i1.Mock implements _i3.ShareService {
  MockShareService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get projectId =>
      (super.noSuchMethod(Invocation.getter(#projectId), returnValue: '')
          as String);
  @override
  String get uriPrefix =>
      (super.noSuchMethod(Invocation.getter(#uriPrefix), returnValue: '')
          as String);
  @override
  _i2.IOSParameters get iosParameters =>
      (super.noSuchMethod(Invocation.getter(#iosParameters),
          returnValue: _FakeIOSParameters_0()) as _i2.IOSParameters);
  @override
  String get packageName =>
      (super.noSuchMethod(Invocation.getter(#packageName), returnValue: '')
          as String);
  @override
  _i2.AndroidParameters get androidParameters =>
      (super.noSuchMethod(Invocation.getter(#androidParameters),
          returnValue: _FakeAndroidParameters_1()) as _i2.AndroidParameters);
  @override
  _i4.Future<Uri> sharePerson(_i3.PersonBase? person) =>
      (super.noSuchMethod(Invocation.method(#sharePerson, [person]),
          returnValue: Future<Uri>.value(_FakeUri_2())) as _i4.Future<Uri>);
  @override
  _i4.Future<Uri> shareQuery(_i3.QueryInfo? query) =>
      (super.noSuchMethod(Invocation.method(#shareQuery, [query]),
          returnValue: Future<Uri>.value(_FakeUri_2())) as _i4.Future<Uri>);
  @override
  _i4.Future<Uri> shareUser(_i3.UserBase? user) =>
      (super.noSuchMethod(Invocation.method(#shareUser, [user]),
          returnValue: Future<Uri>.value(_FakeUri_2())) as _i4.Future<Uri>);
  @override
  _i4.Future<Uri> shareObject<T>(T? object) =>
      (super.noSuchMethod(Invocation.method(#shareObject, [object]),
          returnValue: Future<Uri>.value(_FakeUri_2())) as _i4.Future<Uri>);
  @override
  _i4.Future<void> shareText(String? text) =>
      (super.noSuchMethod(Invocation.method(#shareText, [text]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}
